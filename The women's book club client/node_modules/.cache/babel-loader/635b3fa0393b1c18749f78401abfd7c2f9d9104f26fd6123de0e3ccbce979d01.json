{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  name: 'StudyProgress',\n  data() {\n    return {\n      studyChart: null,\n      planChart: null,\n      noteChart: null,\n      summary: {\n        completedPlansNum: 0,\n        reviewedNotesNum: 0,\n        unfinishedPlansNum: 0,\n        unreviewedNotesNum: 0\n      }\n    };\n  },\n  computed: {\n    uid() {\n      return this.$store.getters['getUserId'];\n    }\n  },\n  methods: {\n    initEcharts() {\n      this.studyChart = echarts.init(this.$refs.study);\n      this.studyChart.setOption({\n        tooltip: {\n          show: true\n        },\n        xAxis: {},\n        yAxis: {\n          data: ['未完成计划数', '已完成计划数', '未复习笔记数', '已复习笔记数']\n        },\n        series: [{\n          type: 'bar',\n          data: [this.summary.unfinishedPlansNum, this.summary.completedPlansNum, this.summary.unreviewedNotesNum, this.summary.reviewedNotesNum]\n        }]\n      });\n      this.planChart = echarts.init(this.$refs.plan);\n      this.planChart.setOption({\n        tooltip: {\n          show: true\n        },\n        title: {\n          text: parseInt(this.summary.completedPlansNum / (this.summary.completedPlansNum + this.summary.unfinishedPlansNum) * 100) + '%',\n          left: 'center',\n          top: 'center'\n        },\n        legend: {\n          // Try 'horizontal'\n          orient: 'vertical',\n          right: 20,\n          top: 'center',\n          icon: 'circle'\n        },\n        series: [{\n          label: {\n            show: false\n          },\n          type: 'pie',\n          data: [{\n            value: this.summary.unfinishedPlansNum,\n            name: '未完成计划数'\n          }, {\n            value: this.summary.completedPlansNum,\n            name: '已完成计划数'\n          }],\n          radius: ['40%', '70%']\n        }]\n      });\n      this.noteChart = echarts.init(this.$refs.note);\n      this.noteChart.setOption({\n        tooltip: {\n          show: true\n        },\n        series: [{\n          type: 'pie',\n          data: [{\n            value: this.summary.unreviewedNotesNum,\n            name: '未复习笔记数'\n          }, {\n            value: this.summary.reviewedNotesNum,\n            name: '已复习笔记数'\n          }]\n        }]\n      });\n      window.addEventListener('resize', () => {\n        this.studyChart.resize();\n        this.planChart.resize();\n        this.noteChart.resize();\n      });\n    },\n    getSummaryDatas() {\n      this.$axios.get(`/plan/GetUserStudyProcessByUid/${this.uid}`).then(response => {\n        console.log(response.data);\n        if (response.data.flag) {\n          this.summary = response.data.data;\n        } else {\n          this.$message.error(response.data.msg);\n        }\n        this.initEcharts();\n      });\n    }\n  },\n  mounted() {\n    this.getSummaryDatas();\n  },\n  beforeDestroy() {\n    this.studyChart.dispose();\n    this.planChart.dispose();\n    this.noteChart.dispose();\n  }\n};","map":{"version":3,"mappings":"AAgCA;AACA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;MACA;IACA;EACA;EACAC;IACAC;MACA;IACA;EACA;EACAC;IACAC;MACA;MACA;QACAC;UACAC;QACA;QACAC;QACAC;UACAhB;QACA;QACAiB,SACA;UACAC;UACAlB;QACA;MAEA;MAEA;MACA;QACAa;UACAC;QACA;QACAK;UACAC;UACAC;UACAC;QACA;QACAC;UACA;UACAC;UACAC;UACAH;UACAI;QACA;QACAT,SACA;UACAU;YACAb;UACA;UACAI;UACAlB,OACA;YACA4B;YACA7B;UACA,GACA;YACA6B;YACA7B;UACA,EACA;UACA8B;QACA;MAEA;MAEA;MACA;QACAhB;UACAC;QACA;QACAG,SACA;UACAC;UACAlB,OACA;YACA4B;YACA7B;UACA,GACA;YACA6B;YACA7B;UACA;QAEA;MAEA;MAEA+B;QACA;QACA;QACA;MACA;IACA;IACAC;MACA;QACAC;QACA;UACA;QACA;UACA;QACA;QACA;MACA;IACA;EACA;EACAC;IACA;EAGA;EACAC;IACA;IACA;IACA;EACA;AACA","names":["name","data","studyChart","planChart","noteChart","summary","completedPlansNum","reviewedNotesNum","unfinishedPlansNum","unreviewedNotesNum","computed","uid","methods","initEcharts","tooltip","show","xAxis","yAxis","series","type","title","text","left","top","legend","orient","right","icon","label","value","radius","window","getSummaryDatas","console","mounted","beforeDestroy"],"sourceRoot":"src/pages","sources":["StudyProgress.vue"],"sourcesContent":["<template>\n  <div class=\"progress\">\n    <div class=\"title\">\n        学习进度管理\n    </div>\n    <div class=\"content\">\n        <div class=\"left\">\n            <div class=\"study-progress\">\n                <span class=\"name\">学习进度图</span>\n                <div class=\"chart-content\" ref=\"study\"></div>\n            </div>\n            <div class=\"summary\">\n                <div>摘要</div>\n                <div>你已经复习了 <span class=\"highlight\">{{ summary.reviewedNotesNum }}</span> 个笔记，还有 <span class=\"highlight\">{{ summary.unreviewedNotesNum }}</span> 个笔记未复习</div>\n                <div>你已经完成了 <span class=\"highlight\">{{ summary.completedPlansNum }}</span> 个学习计划，还有 <span class=\"highlight\">{{ summary.unfinishedPlansNum }}</span> 个学习计划未完成</div>\n            </div>\n        </div>\n        <div class=\"right\">\n            <div class=\"plan\">\n                <span class=\"name\">学习计划完成情况</span>\n                <div class=\"chart-content\" ref=\"plan\"></div>\n            </div>\n            <div class=\"note\">\n                <span class=\"name\">学习笔记复习情况</span>\n                <div class=\"chart-content\" ref=\"note\"></div>\n            </div>\n        </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts'\nexport default {\n    name: 'StudyProgress',\n    data() {\n        return {\n            studyChart: null,\n            planChart: null,\n            noteChart: null,\n            summary: {\n                completedPlansNum: 0,\n                reviewedNotesNum: 0,\n                unfinishedPlansNum: 0,\n                unreviewedNotesNum: 0\n            }\n        }\n    },\n    computed: {\n        uid() {\n            return this.$store.getters['getUserId']\n        }\n    },\n    methods: {\n        initEcharts() {\n            this.studyChart = echarts.init(this.$refs.study)\n            this.studyChart.setOption({\n                tooltip: {\n                    show: true\n                },\n                xAxis: {},\n                yAxis: {\n                    data: ['未完成计划数', '已完成计划数', '未复习笔记数', '已复习笔记数']\n                },\n                series: [\n                    {\n                    type: 'bar',\n                    data: [this.summary.unfinishedPlansNum, this.summary.completedPlansNum, this.summary.unreviewedNotesNum, this.summary.reviewedNotesNum]\n                    }\n                ]    \n            })\n\n            this.planChart = echarts.init(this.$refs.plan)\n            this.planChart.setOption({\n                tooltip: {\n                    show: true\n                },\n                title: {\n                    text: parseInt(this.summary.completedPlansNum / (this.summary.completedPlansNum + this.summary.unfinishedPlansNum) * 100) + '%',\n                    left: 'center',\n                    top: 'center'\n                },\n                legend: {\n                    // Try 'horizontal'\n                    orient: 'vertical',\n                    right: 20,\n                    top: 'center',\n                    icon: 'circle'\n                },\n                series: [\n                    {\n                        label: {\n                            show: false\n                        },\n                        type: 'pie',\n                        data: [\n                            {\n                            value: this.summary.unfinishedPlansNum,\n                            name: '未完成计划数'\n                            },\n                            {\n                            value: this.summary.completedPlansNum,\n                            name: '已完成计划数'\n                            },\n                        ],\n                        radius: ['40%', '70%']\n                    }\n                ]\n            })\n\n            this.noteChart = echarts.init(this.$refs.note)\n            this.noteChart.setOption({\n                tooltip: {\n                    show: true\n                },\n                series: [\n                    {\n                    type: 'pie',\n                    data: [\n                        {\n                        value: this.summary.unreviewedNotesNum,\n                        name: '未复习笔记数'\n                        },\n                        {\n                        value: this.summary.reviewedNotesNum,\n                        name: '已复习笔记数'\n                        },\n                    ]\n                    }\n                ]\n            })\n\n            window.addEventListener('resize', () => {\n                this.studyChart.resize()\n                this.planChart.resize()\n                this.noteChart.resize()\n            })\n        },\n        getSummaryDatas() {\n            this.$axios.get(`/plan/GetUserStudyProcessByUid/${this.uid}`).then(response => {\n                console.log(response.data);\n                if (response.data.flag) {\n                    this.summary = response.data.data\n                } else {\n                    this.$message.error(response.data.msg)\n                }\n                this.initEcharts()\n            })\n        }\n    },\n    mounted() {\n        this.getSummaryDatas()\n\n        \n    },\n    beforeDestroy() {\n        this.studyChart.dispose()\n        this.planChart.dispose()\n        this.noteChart.dispose()\n    }\n}\n</script>\n\n<style scoped>\n.title {\n    font-size: 24px;\n    margin-bottom: 20px;\n}\n\n.content {\n    display: flex;\n}\n\n.left, \n.right {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n}\n\n.left {\n    margin-right: 20px;\n}\n\n.study-progress {\n    height: 500px;\n    padding: 12px;\n    border: 1px solid gray;\n    border-radius: 10px;\n}\n\n.summary {\n    padding: 12px;\n    border: 1px solid gray;\n    border-radius: 10px;\n    margin-top: 20px;\n    font-size: 14px;\n}\n\n.summary div:nth-child(2) {\n    margin: 5px 0;\n}\n\n.plan,\n.note {\n    flex: 1;\n    padding: 12px;\n    border: 1px solid gray;\n    border-radius: 10px;\n}\n\n.note {\n    margin-top: 20px;\n}\n\n.chart-content {\n    width: calc(100% - 40px);\n    height: calc(100% - 40px);\n    /* background-color: red; */\n    margin-top: 18px;\n    margin-left: 20px;\n}\n\n.highlight {\n    color: #4186ff;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}