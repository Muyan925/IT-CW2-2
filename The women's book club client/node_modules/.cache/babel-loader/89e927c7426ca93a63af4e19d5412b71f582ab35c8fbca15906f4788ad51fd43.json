{"ast":null,"code":"export default {\n  name: 'RegisterForm',\n  data() {\n    return {\n      isSee: false,\n      strength1: 0,\n      strength2: 0,\n      user: {\n        userId: '',\n        userPassword: '',\n        confirmPassword: '',\n        userEmail: '',\n        userName: ''\n      },\n      code: '',\n      codeLabel: 'Get CAPTCHA',\n      isSend: true\n    };\n  },\n  methods: {\n    checkStrength1() {\n      if (this.user.userPassword.length > 12) {\n        this.strength1 = 3;\n      } else if (this.user.userPassword.length > 6) {\n        this.strength1 = 2;\n      } else if (this.user.userPassword.length > 0) {\n        this.strength1 = 1;\n      } else {\n        this.strength1 = 0;\n      }\n    },\n    checkStrength2() {\n      if (this.user.confirmPassword.length > 12) {\n        this.strength2 = 3;\n      } else if (this.user.confirmPassword.length > 6) {\n        this.strength2 = 2;\n      } else if (this.user.confirmPassword.length > 0) {\n        this.strength2 = 1;\n      } else {\n        this.strength2 = 0;\n      }\n    },\n    changeIsSee() {\n      this.isSee = !this.isSee;\n    },\n    getCode() {\n      const rgx = /^(?:(?:\\+|00)86)?1(?:(?:3[\\d])|(?:4[5-79])|(?:5[0-35-9])|(?:6[5-7])|(?:7[0-8])|(?:8[\\d])|(?:9[1589]))\\d{8}$/;\n      if (!rgx.test(this.user.userId)) {\n        this.$message.warning(\"Incorrect mobile phone number format\");\n        return;\n      }\n      if (!this.isSend) {\n        return;\n      }\n      this.isSend = false;\n      this.$axios.post(`/users/send/${this.user.userId}`).then(response => {\n        if (response.data.flag) {\n          this.$message.success(response.data.msg);\n        } else {\n          this.$message.error(response.data.msg);\n        }\n      });\n      let seconds = 60;\n      this.timer = setInterval(() => {\n        this.codeLabel = '等待 ' + seconds + ' 秒';\n        seconds--;\n        if (seconds < 0) {\n          clearInterval(this.timer);\n          this.codeLabel = 'Get CAPTCHA';\n          this.isSend = true;\n        }\n      }, 1000);\n    },\n    register() {\n      for (let k in this.user) {\n        if (!this.user[k]) {\n          this.$message.warning('Please check the form for completeness');\n          return;\n        }\n      }\n      if (this.user.userPassword != this.user.confirmPassword) {\n        this.$message.error('Password does not match the confirmation password');\n      } else {\n        let account = {};\n        Object.assign(account, this.user);\n        delete account.confirmPassword;\n        this.$axios.post(`/register`, account).then(response => {\n          if (response.data.flag) {\n            this.$message.success(response.data.msg);\n          } else {\n            this.$message.error(response.data.msg);\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AA8CA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;QACA;MACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;IACAC;MACA;QACA;MACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;QACA;QACA;MACA;MACA;QACA;MACA;MACA;MACA;QACA;UACA;QACA;UACA;QACA;MACA;MACA;MACA;QACA;QACAC;QACA;UACAC;UACA;UACA;QACA;MACA;IAEA;IACAC;MACA;QACA;UACA;UACA;QACA;MACA;MACA;QACA;MACA;QACA;QACAC;QACA;QACA;UACA;YACA;UACA;YACA;UACA;QACA;MACA;IACA;EACA;AACA","names":["name","data","isSee","strength1","strength2","user","userId","userPassword","confirmPassword","userEmail","userName","code","codeLabel","isSend","methods","checkStrength1","checkStrength2","changeIsSee","getCode","seconds","clearInterval","register","Object"],"sourceRoot":"src/components","sources":["RegisterForm.vue"],"sourcesContent":["<template>\n    <div class=\"login-form\">\n      <!-- <img src=\"../assets/images/user.webp\" alt=\"\" srcset=\"\"> -->\n      <div class=\"title\">Register</div>\n      <div class=\"input-content\">\n          <input type=\"text\" pattern=\"\" v-model=\"user.userId\" id=\"phone\">\n          <label class=\"placeholder\" for=\"phone\">Mobile telephone number</label>\n      </div>\n      <!-- <div class=\"input-content\">\n          <input type=\"text\" pattern=\"\" v-model=\"code\" id=\"code\">\n          <label class=\"placeholder\" for=\"code\">验证码</label>\n          <span class=\"get-code\" @click=\"getCode\">{{ codeLabel }}</span>\n      </div> -->\n      <div class=\"input-content\">\n          <input :type=\"isSee ? 'text' : 'password'\" pattern=\"\" @input=\"checkStrength1\" v-model=\"user.userPassword\" id=\"pass\">\n          <label class=\"placeholder\" for=\"pass\">Password</label>\n          <span class=\"see iconfont\" @click=\"changeIsSee\">{{ isSee ? '&#xe624;' : '&#xe625;' }}</span>\n          <span class=\"strength\">\n            <i :class=\"strength1 > 0 ? 'weak' : ''\"></i>\n            <i :class=\"strength1 > 1 ? 'nomal' : ''\"></i>\n            <i :class=\"strength1 > 2 ? 'strong' : ''\"></i>\n          </span>\n      </div>\n      <div class=\"input-content\">\n          <input :type=\"isSee ? 'text' : 'password'\" pattern=\"\" @input=\"checkStrength2\" v-model=\"user.confirmPassword\" id=\"c-pass\">\n          <label class=\"placeholder\" for=\"c-pass\">Confirm Password</label>\n          <span class=\"see iconfont\" @click=\"changeIsSee\">{{ isSee ? '&#xe624;' : '&#xe625;' }}</span>\n          <span class=\"strength\">\n            <i :class=\"strength2 > 0 ? 'weak' : ''\"></i>\n            <i :class=\"strength2 > 1 ? 'nomal' : ''\"></i>\n            <i :class=\"strength2 > 2 ? 'strong' : ''\"></i>\n          </span>\n      </div>\n      <div class=\"input-content\">\n          <input type=\"text\" pattern=\"\" v-model=\"user.userEmail\" id=\"email\">\n          <label class=\"placeholder\" for=\"email\">Email</label>\n      </div>\n      <div class=\"input-content\">\n          <input type=\"text\" pattern=\"\" v-model=\"user.userName\" id=\"nickname\">\n          <label class=\"placeholder\" for=\"nickname\">Name</label>\n      </div>\n      <button class=\"btn\" @click=\"register\">Sign Up</button>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n      name: 'RegisterForm',\n      data() {\n          return {\n            isSee: false,\n            strength1: 0,\n            strength2: 0,\n            user: {\n                userId: '',\n                userPassword: '',\n                confirmPassword: '',\n                userEmail: '',\n                userName: ''\n            },\n            code: '',\n            codeLabel: 'Get CAPTCHA',\n            isSend: true\n          }\n      },\n      methods: {\n        checkStrength1() {\n            if (this.user.userPassword.length > 12) {\n                this.strength1 = 3\n            } else if (this.user.userPassword.length > 6) {\n                this.strength1 = 2\n            } else if (this.user.userPassword.length > 0) {\n                this.strength1 = 1\n            } else {\n                this.strength1 = 0\n            }\n        },\n        checkStrength2() {\n            if (this.user.confirmPassword.length > 12) {\n                this.strength2 = 3\n            } else if (this.user.confirmPassword.length > 6) {\n                this.strength2 = 2\n            } else if (this.user.confirmPassword.length > 0) {\n                this.strength2 = 1\n            } else {\n                this.strength2 = 0\n            }\n        },\n        changeIsSee() {\n            this.isSee = !this.isSee\n        },\n        getCode() {    \n            const rgx = /^(?:(?:\\+|00)86)?1(?:(?:3[\\d])|(?:4[5-79])|(?:5[0-35-9])|(?:6[5-7])|(?:7[0-8])|(?:8[\\d])|(?:9[1589]))\\d{8}$/\n            if (!rgx.test(this.user.userId)) {\n                this.$message.warning(\"Incorrect mobile phone number format\")\n                return\n            }\n            if (!this.isSend) {\n                return\n            }\n            this.isSend = false\n            this.$axios.post(`/users/send/${this.user.userId}`).then(response => {\n                if (response.data.flag) {\n                    this.$message.success(response.data.msg)\n                } else {\n                    this.$message.error(response.data.msg)\n                }\n            })\n            let seconds = 60\n            this.timer = setInterval(() => {\n                this.codeLabel = '等待 ' + seconds + ' 秒'\n                seconds--\n                if (seconds < 0) {\n                    clearInterval(this.timer)\n                    this.codeLabel = 'Get CAPTCHA'\n                    this.isSend = true\n                }\n            }, 1000);\n\n        },\n        register() {\n            for(let k in this.user) {\n                if (!this.user[k]) {\n                    this.$message.warning('Please check the form for completeness')\n                    return\n                }\n            }\n            if (this.user.userPassword != this.user.confirmPassword) {\n                this.$message.error('Password does not match the confirmation password')\n            } else {\n                let account = {}\n                Object.assign(account, this.user)\n                delete account.confirmPassword\n                this.$axios.post(`/register`, account).then(response => {\n                    if (response.data.flag) {\n                        this.$message.success(response.data.msg)\n                    } else {\n                        this.$message.error(response.data.msg)\n                    }\n                })\n            }\n        }\n      },\n  }\n  </script>\n  \n  <style scoped>\n  .login-form {\n    position: relative;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      width: 100%;\n      height: 100%;\n      padding: 70px 20px 20px;\n  }\n  \n  .login-form img {\n      width: 100px;\n      height: 100px;\n      border-radius: 50%;\n      border: 1px solid rgb(179, 225, 249);\n      margin-bottom: 40px;\n  }\n  \n  .login-form input {\n      height: 30px;\n      width: 240px;\n      border: 1px solid #ccc;\n      border-radius: 5px;\n      outline: none;\n      transition: all .2s;\n      padding: 2px 4px;\n      font-size: 16px;\n  }\n  \n  .login-form input:focus {\n      border-color:  #67a2ea;\n  }\n  .input-content {\n      position: relative;\n      margin-bottom: 25px;\n  }\n  .input-content .placeholder {\n      display: block;\n      position: absolute;\n      height: 30px;\n      line-height: 30px;\n      top: 0;\n      left: 4px;\n      font-size: 14px;\n      color: #929191;\n      transition: all .3s;\n  }\n  \n  .input-content input:focus + .placeholder {\n      top: -24px;\n      color: #67a2ea;\n      font-size: 12px;\n  }\n  \n  .input-content input:invalid + .placeholder {\n      top: -24px;\n      color: #67a2ea;\n      font-size: 12px;\n  } \n\n.title {\n    position: absolute;\n    top: 20px;\n    left: 28px;\n    font-size: 24px;\n    font-weight: 700;\n    color: #67a2ea;\n}\n  \n  .login-form button {\n      width: 80px;\n      height:30px;\n      /* margin-top: 10px; */\n  }\n  \n  .see {\n      position: absolute;\n      top: 0;\n      right: 0;\n      width: 30px;\n      height: 30px;\n      line-height: 30px;\n      /* background-color: blue; */\n      text-align: center;\n      cursor: pointer;\n      color: #929191;\n  }\n\n  .strength {\n    display: flex;\n    position: absolute;\n    bottom: -8px;\n    right: 0;\n    width: 100px;\n    height: 4px;\n    /* background-color: pink; */\n  }\n\n  .strength i {\n    flex: 1;\n    background-color: rgb(190, 190, 190);\n    border-radius: 2px;\n  }\n\n  .strength i:nth-child(2) {\n    margin: 0 4px;\n  }\n\n  .weak {\n    background-color: rgb(253, 36, 36) !important;\n  }\n\n  .nomal {\n    background-color: rgb(251, 151, 57) !important;\n  }\n\n  .strong {\n    background-color: rgb(8, 199, 8) !important;\n  }\n\n  .get-code {\n    position: absolute;\n    right: 8px;\n    top: 8px;\n    font-size: 12px;\n    color: #aaa;\n    cursor: pointer;\n  }\n\n  .get-code:hover {\n    color: #6a9af1;\n  }\n  </style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}