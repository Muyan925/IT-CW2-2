{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"PlanManage\",\n  data() {\n    return {\n      keywords: '',\n      filterPlan: {},\n      noteListFormVisible: false,\n      planDetailForm: false,\n      addDialogFormVisible: false,\n      addPlan: true,\n      dialogTitle: \"添加学习计划\",\n      plans: [],\n      PID: '',\n      planNotes: [],\n      toAddNoteList: [],\n      multipleSelection: [],\n      plan: {\n        uId: \"\",\n        planName: \"\",\n        planStress: \"\",\n        planInfo: \"\",\n        startTime: \"\",\n        endTime: \"\",\n        planStatus: 0\n      },\n      willAddNotesList: [],\n      pagination: {\n        //分页相关模型数据\n        currentPage: 1,\n        //当前页码\n        pageSize: 7,\n        //每页显示的记录数\n        total: 0 //总记录数\n      }\n    };\n  },\n\n  computed: {\n    uid() {\n      return this.$store.getters[\"getUserId\"];\n    }\n  },\n  methods: {\n    cleanKeyword() {\n      this.keywords = '';\n      this.getPlansList();\n    },\n    search() {\n      this.$axios.get(`/Plan/SelectPlansByKeyword/${this.uid}/${this.pagination.currentPage}/${this.pagination.pageSize}?keyword=${this.keywords}`).then(response => {\n        if (response.data.flag) {\n          this.plans = response.data.data.records;\n          this.pagination.total = response.data.data.total;\n          // this.pagination.currentPage = response.data.data.beginPage\n          // this.keywords = ''\n        } else {\n          this.$message.error(response.data.msg);\n        }\n      });\n    },\n    deletePlanNote(nid) {\n      this.$alert('是否确定删除此条记录', '提示', {\n        type: 'warning',\n        cancelButtonText: '取消',\n        confirmButtonText: '确定'\n      }).then(() => {\n        const formData = new FormData();\n        formData.append('pId', this.PID);\n        formData.append('nId', nid);\n        this.$axios.post(`/Plan/RemoveNotesFromPlan`, formData).then(response => {\n          if (response.data.flag) {\n            this.$message.success(response.data.msg);\n            this.getInsertedNotes();\n          } else {\n            this.$message.error(response.data.msg);\n          }\n        });\n      }).catch(() => {\n        this.$message.info('已取消删除');\n      });\n    },\n    handleFilterPlan() {\n      this.filterPlan.uId = this.uid;\n      this.$axios.post(`/Plan/FilterPlans/${this.pagination.currentPage}/${this.pagination.pageSize}`, this.filterPlan).then(response => {\n        console.log(response.data);\n        if (response.data.flag) {\n          this.plans = response.data.data.records;\n          this.pagination.total = response.data.data.total;\n          // this.pagination.currentPage = response.data.data.beginPage\n        } else {\n          this.$message.error(response.data.msg);\n        }\n      });\n    },\n    handleAddNoteToPlan() {\n      if (this.willAddNotesList.length === 0) {\n        this.$message.warning('请先添加笔记');\n        this.noteListFormVisible = false;\n        return;\n      }\n      const formData = new FormData();\n      let nids = [];\n      this.willAddNotesList.forEach(item => {\n        nids.push(item.nId);\n      });\n      formData.append('pId', this.PID);\n      formData.append('nIds', nids);\n      this.$axios.post('/Note/AddNotesToPlan', formData).then(response => {\n        if (response.data.flag) {\n          this.$message.success(response.data.msg);\n          this.noteListFormVisible = false;\n          this.getInsertedNotes();\n        } else {\n          this.$message.error(response.data.msg);\n        }\n      });\n    },\n    handleSelected(v) {\n      this.willAddNotesList = v;\n    },\n    showSelectPlanDialog() {\n      this.noteListFormVisible = true;\n      this.$axios.get(`/Note/GetNotesToAdd/${this.PID}`).then(response => {\n        if (response.data.flag) {\n          this.toAddNoteList = response.data.data;\n        } else {\n          this.$message.error(response.data.msg);\n        }\n      });\n    },\n    showDetailInfo(pid) {\n      this.PID = pid;\n      this.planDetailForm = true;\n      this.getInsertedNotes();\n    },\n    getInsertedNotes() {\n      this.$axios.get(`/Plan/ShowPlanNotesInfoByPid/${this.PID}`).then(response => {\n        if (response.data.flag) {\n          this.planNotes = response.data.data;\n        } else {\n          this.$message.error(response.data.msg);\n        }\n      });\n    },\n    showAddDialog() {\n      this.plan = {};\n      this.dialogTitle = \"添加学习计划\";\n      this.addDialogFormVisible = true;\n      this.addPlan = true;\n    },\n    showModifyDialog(pid) {\n      this.addDialogFormVisible = true;\n      this.dialogTitle = \"编辑学习计划\";\n      this.addPlan = false;\n      this.$axios.get(`Plan/ShowPlanBasicInfoByPid/${pid}`).then(response => {\n        if (response.data.flag) {\n          this.plan = response.data.data;\n        } else {\n          this.$message.error(response.data.msg);\n        }\n      });\n    },\n    handleDelete(pid) {\n      this.$confirm(\"此操作将永久删除此条记录, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(() => {\n        this.$axios.post(`/Plan/DeleteSinglePlanByPid/${pid}`).then(response => {\n          if (response.data.flag) {\n            this.$message.success(response.data.msg);\n            this.getPlansList();\n          } else {\n            this.$message.error(response.data.msg);\n          }\n        });\n      }).catch(() => {\n        this.$message({\n          type: \"info\",\n          message: \"已取消删除\"\n        });\n      });\n    },\n    handleMultipleDelete() {\n      if (this.multipleSelection.length === 0) {\n        this.$message.info(\"请先选中数据\");\n        return;\n      }\n      this.$confirm(\"此操作将永久删除所有选中的记录, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(() => {\n        let pids = [];\n        this.multipleSelection.forEach(item => {\n          pids.push(item.pId);\n        });\n        const formData = new FormData();\n        formData.append(\"pIds\", pids);\n        this.$axios.post(`/Plan/DeletePlansByPids`, formData).then(response => {\n          if (response.data.flag) {\n            this.$message.success(response.data.msg);\n            this.getPlansList();\n          } else {\n            this.$message.error(response.data.msg);\n          }\n        });\n      }).catch(() => {\n        this.$message({\n          type: \"info\",\n          message: \"已取消删除\"\n        });\n      });\n    },\n    handleModify() {\n      this.$axios.post(\"/Plan/UpdatePlanBasicInfo\", this.plan).then(response => {\n        if (response.data.flag) {\n          this.$message.success(response.data.msg);\n          this.addDialogFormVisible = false;\n          this.getPlansList();\n        } else {\n          this.$message.error(response.data.msg);\n        }\n      });\n    },\n    handleAddPlan() {\n      this.plan.uId = this.uid;\n      if (this.plan.startTime > this.plan.endTime) {\n        this.$message.error('开始时间不能大于结束时间');\n        return;\n      }\n      if (this.addPlan) {\n        this.$axios.post(\"/Plan/AddPlans\", this.plan).then(response => {\n          if (response.data.flag) {\n            this.$message.success(response.data.msg);\n            this.addDialogFormVisible = false;\n            // this.pagination.currentPage = this.pagination.total / this.pagination.pageSize\n            this.getPlansList();\n          } else {\n            this.$message.error(response.data.msg);\n          }\n        });\n      } else {\n        this.handleModify();\n      }\n    },\n    handleSelectionChange(v) {\n      this.multipleSelection = v;\n    },\n    getPlansList() {\n      this.$axios.get(`/Plan/GetAllPlansByUid/${this.uid}/${this.pagination.currentPage}/${this.pagination.pageSize}`).then(response => {\n        console.log(response.data);\n        if (response.data.flag) {\n          this.plans = response.data.data.records;\n          this.pagination.total = response.data.data.total;\n        } else {\n          this.$message.error(response.data.msg);\n        }\n      });\n    },\n    handlePagination(current) {\n      // console.log(current);\n      this.pagination.currentPage = current;\n      this.getPlansList();\n    }\n  },\n  created() {\n    this.getPlansList();\n  }\n};","map":{"version":3,"mappings":";AAiJA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;MACAC;QAAA;QACAC;QAAA;QACAC;QAAA;QACAC;MACA;IACA;EACA;;EACAC;IACAC;MACA;IACA;EACA;EACAC;IACAC;MACA;MACA;IACA;IACAC;MACA;QACA;UACA;UACA;UACA;UACA;QACA;UACA;QACA;MACA;IACA;IACAC;MACA;QACAC;QACAC;QACAC;MACA;QACA;QACAC;QACAA;QACA;UACA;YACA;YACA;UACA;YACA;UACA;QACA;MACA;QACA;MACA;IAEA;IACAC;MACA;MACA;QACAC;QACA;UACA;UACA;UACA;QACA;UACA;QACA;MACA;IACA;IACAC;MACA;QACA;QACA;QACA;MACA;MACA;MACA;MACA;QACAC;MACA;MACAJ;MACAA;MACA;QACA;UACA;UACA;UACA;QACA;UACA;QACA;MACA;IACA;IACAK;MACA;IACA;IACAC;MACA;MACA;QACA;UACA;QACA;UACA;QACA;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACA;QACA;UACA;QACA;UACA;QACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACA;QACA;UACA;QACA;UACA;QACA;MACA;IACA;IACAC;MACA;QACAZ;QACAD;QACAD;MACA,GACAe;QACA,YACAC,2CACAD;UACA;YACA;YACA;UACA;YACA;UACA;QACA;MACA,GACAE;QACA;UACAjB;UACAkB;QACA;MACA;IACA;IACAC;MACA;QACA;QACA;MACA;MACA;QACAjB;QACAD;QACAD;MACA,GACAe;QACA;QACA;UACAK;QACA;QACA;QACAjB;QACA,YACAa,0CACAD;UACA;YACA;YACA;UACA;YACA;UACA;QACA;MACA,GACAE;QACA;UACAjB;UACAkB;QACA;MACA;IACA;IACAG;MACA,YACAL,6CACAD;QACA;UACA;UACA;UACA;QACA;UACA;QACA;MAEA;IACA;IACAO;MACA;MACA;QACA;QACA;MACA;MACA;QACA;UACA;YACA;YACA;YACA;YACA;UACA;YACA;UACA;QAEA;MACA;QACA;MACA;IAEA;IACAC;MACA;IACA;IACAC;MACA;QACAnB;QACA;UACA;UACA;QACA;UACA;QACA;MACA;IACA;IACAoB;MACA;MACA;MACA;IACA;EACA;EACAC;IACA;EACA;AACA","names":["name","data","keywords","filterPlan","noteListFormVisible","planDetailForm","addDialogFormVisible","addPlan","dialogTitle","plans","PID","planNotes","toAddNoteList","multipleSelection","plan","uId","planName","planStress","planInfo","startTime","endTime","planStatus","willAddNotesList","pagination","currentPage","pageSize","total","computed","uid","methods","cleanKeyword","search","deletePlanNote","type","cancelButtonText","confirmButtonText","formData","handleFilterPlan","console","handleAddNoteToPlan","nids","handleSelected","showSelectPlanDialog","showDetailInfo","getInsertedNotes","showAddDialog","showModifyDialog","handleDelete","then","post","catch","message","handleMultipleDelete","pids","handleModify","handleAddPlan","handleSelectionChange","getPlansList","handlePagination","created"],"sourceRoot":"src/pages","sources":["PlanManage.vue"],"sourcesContent":["<template>\n    <div class=\"plan-manage\">\n        <div class=\"title\">\n            <span class=\"name\">User Management</span>\n        </div>\n        <div class=\"content\">\n            <div class=\"opts\">\n                <div class=\"filter-content\">\n                    <el-select @change=\"handleFilterPlan\" clearable v-model=\"filterPlan.planStatus\" placeholder=\"Status\" size=\"small\" style=\"width: 100px\">\n                        <el-option label=\"Online\" :value=\"0\"></el-option>\n                        <el-option label=\"Offline\" :value=\"1\"></el-option>\n                    </el-select>\n                    <el-select @change=\"handleFilterPlan\" clearable v-model=\"filterPlan.planStress\" placeholder=\"Level\" size=\"small\" style=\"width: 100px\">\n                        <el-option value=\"p1\"></el-option>\n                        <el-option value=\"P2\"></el-option>\n                        <el-option value=\"P3\"></el-option>\n                    </el-select>\n                    <!-- <button class=\"filter btn\">筛选</button> -->\n                </div>\n                <div class=\"search-content\">\n                    <input type=\"text\" v-model=\"keywords\" placeholder=\"Fuzzy search by user name\"/>\n                    <i class=\"el-icon-circle-close\" @click=\"cleanKeyword\" v-show=\"keywords\"></i>\n                    <button class=\"search btn\" @click=\"search\">Search</button>\n                </div>\n                <div>\n                    <button class=\"add-plan btn\" @click=\"showAddDialog\">Add User</button>\n                    <button class=\"all-delete btn\" @click=\"handleMultipleDelete\">\n                        bulk delete\n                    </button>\n                </div>\n            </div>\n            <el-table height=\"500\" ref=\"multipleTable\" :data=\"plans\" tooltip-effect=\"dark\"\n                style=\"width: 100%; border: 1px solid #ccc; margin-top: 20px\" @selection-change=\"handleSelectionChange\">\n                <el-table-column type=\"selection\" width=\"55\"> </el-table-column>\n                <el-table-column label=\"计划名称\">\n                    <template slot-scope=\"scope\">\n                        <span @click=\"showDetailInfo(scope.row.pId)\" class=\"plan-name\">\n                            {{ scope.row.planName }}\n                        </span>\n                    </template>\n                </el-table-column>\n                <el-table-column prop=\"startTime\" label=\"startTime\" width=\"100\">\n                </el-table-column>\n                <el-table-column prop=\"endTime\" label=\"endTime\" width=\"100\" show-overflow-tooltip>\n                </el-table-column>\n                <el-table-column prop=\"planStress\" label=\"Level\" width=\"100\" show-overflow-tooltip>\n                </el-table-column>\n                <el-table-column label=\"Status\" width=\"100\" show-overflow-tooltip>\n                    <template slot-scope=\"scope\">\n                        {{ scope.row.planStatus === 0 ? 'Online' : 'Offline' }}\n                    </template>\n                </el-table-column>\n                <el-table-column label=\"operation\" width=\"160\">\n                    <template slot-scope=\"scope\">\n                        <!-- <span class=\"delete\" @click=\"handleDelete(scope.row.pId)\">删除</span>\n                        <span class=\"modify\" @click=\"showModifyDialog(scope.row.pId)\">编辑</span> -->\n                        <el-button type=\"primary\" class=\"el-icon-edit\" size=\"small\" @click=\"showModifyDialog(scope.row.pId)\"></el-button>\n            <el-button type=\"danger\" class=\"el-icon-delete\" size=\"small\" @click=\"handleDelete(scope.row.pId)\"></el-button>\n                    </template>\n                </el-table-column>\n            </el-table>\n            <div class=\"pagination\">\n                <el-pagination @prev-click=\"handlePagination\" @next-click=\"handlePagination\" @current-change=\"handlePagination\" background layout=\"prev, pager, next\" :current-page=\"pagination.currentPage\" :page-size=\"pagination.pageSize\" :total=\"pagination.total\">\n                </el-pagination>\n            </div>\n        </div>\n\n        <el-dialog :title=\"dialogTitle\" :visible.sync=\"addDialogFormVisible\">\n            <el-form ref=\"form\" :model=\"plan\" label-width=\"80px\">\n                <el-form-item label=\"Username\">\n                    <el-input v-model=\"plan.planName\" style=\"max-width: 400px\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"Intro\">\n                    <el-input v-model=\"plan.planInfo\" type=\"textarea\" rows=\"5\" show-word-limit maxlength=\"100\"\n                        style=\"max-width: 400px\"></el-input>\n                </el-form-item>\n\n                <el-form-item label=\"startTime\">\n                    <el-date-picker value-format=\"yyyy-MM-dd\" v-model=\"plan.startTime\" style=\"max-width: 200px\" type=\"date\"\n                        placeholder=\"选择日期\"></el-date-picker>\n                </el-form-item>\n                <el-form-item label=\"结束时间\">\n                    <el-date-picker value-format=\"yyyy-MM-dd\" v-model=\"plan.endTime\" style=\"max-width: 200px\" type=\"date\"\n                        placeholder=\"选择日期\"></el-date-picker>\n                </el-form-item>\n                <el-form-item label=\"重要性\">\n                    <el-select v-model=\"plan.planStress\" style=\"max-width: 200px\" placeholder=\"请选择计划重要性\">\n                        <el-option label=\"P1\" value=\"P1\"></el-option>\n                        <el-option label=\"P2\" value=\"P2\"></el-option>\n                        <el-option label=\"P3\" value=\"P3\"></el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item label=\"状态\" v-show=\"!addPlan\">\n                    <el-select v-model=\"plan.planStatus\" style=\"max-width: 200px\" placeholder=\"请选择计划完成状态\">\n                        <el-option label=\"未完成\" :value=\"0\"></el-option>\n                        <el-option label=\"已完成\" :value=\"1\"></el-option>\n                    </el-select>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"addDialogFormVisible = false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"handleAddPlan\">确 定</el-button>\n            </div>\n        </el-dialog>\n\n        <el-dialog title=\"计划详情-笔记列表\" :visible.sync=\"planDetailForm\">\n            <el-table height=\"500\" ref=\"multipleTable\" :data=\"planNotes\" tooltip-effect=\"dark\"\n                style=\"width: 100%; border: 1px solid #ccc;\">\n                <el-table-column type=\"index\" width=\"40\"> </el-table-column>\n                <el-table-column label=\"笔记名称\" prop=\"noteName\"> </el-table-column>\n                <el-table-column prop=\"typeName\" label=\"笔记类型\" width=\"120\">\n                </el-table-column>\n                <el-table-column prop=\"notePress\" label=\"重要性\" width=\"60\" show-overflow-tooltip>\n                </el-table-column>\n                <el-table-column label=\"状态\" width=\"100\" show-overflow-tooltip>\n                    <template slot-scope=\"scope\">\n                        {{ scope.row.noteStatus === 0 ? '未完成' : '已完成' }}\n                    </template>\n                </el-table-column>\n                <el-table-column label=\"操作\" width=\"60\">\n                    <template slot-scope=\"scope\">\n                        <el-button type=\"danger\" class=\"el-icon-delete\" size=\"small\" @click=\"deletePlanNote(scope.row.nId)\"></el-button>\n                    </template>\n                </el-table-column>\n            </el-table>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button type=\"primary\" @click=\"showSelectPlanDialog\">添加笔记</el-button>\n            </div>\n            <el-dialog title=\"选择要添加的笔记\" :visible.sync=\"noteListFormVisible\" append-to-body>\n                <el-table height=\"300\" ref=\"multipleTable\" :data=\"toAddNoteList\" tooltip-effect=\"dark\"\n                    style=\"width: 100%; border: 1px solid #ccc;\"\n                    @selection-change=\"handleSelected\">\n                    <el-table-column type=\"selection\" width=\"55\"> </el-table-column>\n                    <el-table-column label=\"笔记名称\" prop=\"noteName\"> </el-table-column>\n                </el-table>\n                <div slot=\"footer\" class=\"dialog-footer\">\n                    <el-button type=\"primary\" @click=\"handleAddNoteToPlan\">确定</el-button>\n                </div>\n            </el-dialog>\n        </el-dialog>\n    </div>\n</template>\n  \n<script>\n\nexport default {\n    name: \"PlanManage\",\n    data() {\n        return {\n            keywords: '',\n            filterPlan: {},\n            noteListFormVisible: false,\n            planDetailForm: false,\n            addDialogFormVisible: false,\n            addPlan: true,\n            dialogTitle: \"添加学习计划\",\n            plans: [],\n            PID: '',\n            planNotes: [],\n            toAddNoteList: [],\n            multipleSelection: [],\n            plan: {\n                uId: \"\",\n                planName: \"\",\n                planStress: \"\",\n                planInfo: \"\",\n                startTime: \"\",\n                endTime: \"\",\n                planStatus: 0\n            },\n            willAddNotesList: [],\n            pagination: {//分页相关模型数据\n                currentPage: 1,//当前页码\n                pageSize:7,//每页显示的记录数\n                total:0//总记录数\n            },\n        };\n    },\n    computed: {\n        uid() {\n            return this.$store.getters[\"getUserId\"];\n        },\n    },\n    methods: {\n        cleanKeyword() {\n            this.keywords = ''\n            this.getPlansList()\n        },\n        search() {\n            this.$axios.get(`/Plan/SelectPlansByKeyword/${this.uid}/${this.pagination.currentPage}/${this.pagination.pageSize}?keyword=${this.keywords}`).then(response => {\n                if (response.data.flag) {\n                    this.plans = response.data.data.records\n                    this.pagination.total = response.data.data.total\n                    // this.pagination.currentPage = response.data.data.beginPage\n                    // this.keywords = ''\n                } else {\n                    this.$message.error(response.data.msg)\n                }\n            })\n        },\n        deletePlanNote(nid) {\n            this.$alert('是否确定删除此条记录', '提示', {\n                type: 'warning',\n                cancelButtonText: '取消',\n                confirmButtonText: '确定'\n            }).then(() => {\n                const formData = new FormData()\n                formData.append('pId', this.PID)\n                formData.append('nId', nid)\n                this.$axios.post(`/Plan/RemoveNotesFromPlan`, formData).then(response => {\n                    if (response.data.flag) {\n                        this.$message.success(response.data.msg)\n                        this.getInsertedNotes()\n                    } else {\n                        this.$message.error(response.data.msg)\n                    }\n                })\n            }).catch(() => {\n                this.$message.info('已取消删除')\n            })\n            \n        },\n        handleFilterPlan() {\n            this.filterPlan.uId = this.uid\n            this.$axios.post(`/Plan/FilterPlans/${this.pagination.currentPage}/${this.pagination.pageSize}`, this.filterPlan).then(response => {\n                console.log(response.data);\n                if (response.data.flag) {\n                    this.plans = response.data.data.records\n                    this.pagination.total = response.data.data.total\n                    // this.pagination.currentPage = response.data.data.beginPage\n                } else {\n                    this.$message.error(response.data.msg)\n                }\n            })\n        },\n        handleAddNoteToPlan() {\n            if (this.willAddNotesList.length === 0) {\n                this.$message.warning('请先添加笔记')\n                this.noteListFormVisible = false\n                return\n            }\n            const formData = new FormData()\n            let nids = []\n            this.willAddNotesList.forEach(item => {\n                nids.push(item.nId)\n            })\n            formData.append('pId', this.PID)\n            formData.append('nIds', nids)\n            this.$axios.post('/Note/AddNotesToPlan', formData).then(response => {\n                if (response.data.flag) {\n                    this.$message.success(response.data.msg)\n                    this.noteListFormVisible = false\n                    this.getInsertedNotes()\n                } else {\n                    this.$message.error(response.data.msg)\n                }\n            })\n        },\n        handleSelected(v) {\n            this.willAddNotesList = v\n        },\n        showSelectPlanDialog() {\n            this.noteListFormVisible = true\n            this.$axios.get(`/Note/GetNotesToAdd/${this.PID}`).then(response => {\n                if (response.data.flag) {\n                    this.toAddNoteList = response.data.data\n                } else {\n                    this.$message.error(response.data.msg)\n                }\n            })\n        },\n        showDetailInfo(pid) {\n            this.PID = pid\n            this.planDetailForm = true\n            this.getInsertedNotes()\n        },\n        getInsertedNotes() {\n            this.$axios.get(`/Plan/ShowPlanNotesInfoByPid/${this.PID}`).then(response => {\n                if (response.data.flag) {\n                    this.planNotes = response.data.data;\n                } else {\n                    this.$message.error(response.data.msg);\n                }\n            })\n        },\n        showAddDialog() {\n            this.plan = {};\n            this.dialogTitle = \"添加学习计划\";\n            this.addDialogFormVisible = true;\n            this.addPlan = true;\n        },\n        showModifyDialog(pid) {\n            this.addDialogFormVisible = true;\n            this.dialogTitle = \"编辑学习计划\";\n            this.addPlan = false;\n            this.$axios.get(`Plan/ShowPlanBasicInfoByPid/${pid}`).then((response) => {\n                if (response.data.flag) {\n                    this.plan = response.data.data;\n                } else {\n                    this.$message.error(response.data.msg);\n                }\n            });\n        },\n        handleDelete(pid) {\n            this.$confirm(\"此操作将永久删除此条记录, 是否继续?\", \"提示\", {\n                confirmButtonText: \"确定\",\n                cancelButtonText: \"取消\",\n                type: \"warning\",\n            })\n                .then(() => {\n                    this.$axios\n                        .post(`/Plan/DeleteSinglePlanByPid/${pid}`)\n                        .then((response) => {\n                            if (response.data.flag) {\n                                this.$message.success(response.data.msg);\n                                this.getPlansList()\n                            } else {\n                                this.$message.error(response.data.msg);\n                            }\n                        });\n                })\n                .catch(() => {\n                    this.$message({\n                        type: \"info\",\n                        message: \"已取消删除\",\n                    });\n                });\n        },\n        handleMultipleDelete() {\n            if (this.multipleSelection.length === 0) {\n                this.$message.info(\"请先选中数据\");\n                return;\n            }\n            this.$confirm(\"此操作将永久删除所有选中的记录, 是否继续?\", \"提示\", {\n                confirmButtonText: \"确定\",\n                cancelButtonText: \"取消\",\n                type: \"warning\",\n            })\n                .then(() => {\n                    let pids = [];\n                    this.multipleSelection.forEach((item) => {\n                        pids.push(item.pId);\n                    });\n                    const formData = new FormData();\n                    formData.append(\"pIds\", pids);\n                    this.$axios\n                        .post(`/Plan/DeletePlansByPids`, formData)\n                        .then((response) => {\n                            if (response.data.flag) {\n                                this.$message.success(response.data.msg);\n                                this.getPlansList();\n                            } else {\n                                this.$message.error(response.data.msg);\n                            }\n                        });\n                })\n                .catch(() => {\n                    this.$message({\n                        type: \"info\",\n                        message: \"已取消删除\",\n                    });\n                });\n        },\n        handleModify() {\n            this.$axios\n                .post(\"/Plan/UpdatePlanBasicInfo\", this.plan)\n                .then((response) => {\n                    if (response.data.flag) {\n                        this.$message.success(response.data.msg);\n                        this.addDialogFormVisible = false\n                        this.getPlansList()\n                    } else {\n                        this.$message.error(response.data.msg);\n                    }\n                    \n                });\n        },\n        handleAddPlan() {\n            this.plan.uId = this.uid;\n            if (this.plan.startTime > this.plan.endTime) {\n                this.$message.error('开始时间不能大于结束时间')\n                return\n            }\n            if (this.addPlan) {\n                this.$axios.post(\"/Plan/AddPlans\", this.plan).then((response) => {\n                    if (response.data.flag) {\n                        this.$message.success(response.data.msg);\n                        this.addDialogFormVisible = false\n                        // this.pagination.currentPage = this.pagination.total / this.pagination.pageSize\n                        this.getPlansList()\n                    } else {\n                        this.$message.error(response.data.msg);\n                    }\n                    \n                });\n            } else {\n                this.handleModify()\n            }\n            \n        },\n        handleSelectionChange(v) {\n            this.multipleSelection = v;\n        },\n        getPlansList() {\n            this.$axios.get(`/Plan/GetAllPlansByUid/${this.uid}/${this.pagination.currentPage}/${this.pagination.pageSize}`).then((response) => {\n                console.log(response.data);\n                if (response.data.flag) {\n                    this.plans = response.data.data.records;\n                    this.pagination.total = response.data.data.total\n                } else {\n                    this.$message.error(response.data.msg);\n                }\n            });\n        },\n        handlePagination(current) {\n            // console.log(current);\n            this.pagination.currentPage = current\n            this.getPlansList()\n        }\n    },\n    created() {\n        this.getPlansList();\n    },\n};\n</script>\n  \n<style scoped>\n.title {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 20px;\n}\n\n.title .name {\n    font-size: 24px;\n}\n\n.search-content {\n    position: relative;\n}\n\n.search-content i {\n    position: absolute;\n    right: 76px;\n    top: 50%;\n    transform: translateY(-55%);\n    color: #ddd;\n    transition: all .3s;\n    cursor: default;\n}\n\n.search-content i:hover {\n    color: #ccc;\n}\n\n.search-content input {\n    width: 400px;\n    height: 30px;\n    margin-right: 20px;\n    border-radius: 15px;\n    border: 1px solid #ddd;\n    outline: none;\n    text-indent: 15px;\n    font-size: 16px;\n    transition: all .3s;\n}\n\n.search-content input::placeholder {\n    color: #ccc;\n    font-size: 14px;\n}\n\n.search-content input:hover {\n    border-color: #ccc;\n}\n\n.search-content input:focus {\n    border-color: #5a9cf8;\n}\n\n.content {\n    position: relative;\n    padding: 12px;\n    border: 1px solid #ccc;\n    border-radius: 10px;\n}\n\n.opts {\n    display: flex;\n    justify-content: space-between;\n}\n\n.filter-content * {\n    margin-right: 10px;\n}\n\n.pagination {\n    display: flex;\n    width: 100%;\n    margin-top: 20px;\n    justify-content: center;\n}\n\n.add-plan {\n    margin-right: 10px;\n}\n\n.plan-name {\n    cursor: pointer;\n}\n\n.plan-name:hover {\n    color: rgb(61, 144, 233);\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}