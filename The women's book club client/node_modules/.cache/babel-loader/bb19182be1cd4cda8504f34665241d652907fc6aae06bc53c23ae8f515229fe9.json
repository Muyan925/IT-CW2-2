{"ast":null,"code":"export default {\n  name: \"NoteTypes\",\n  data() {\n    return {\n      types: [{\n        name: '123'\n      }]\n    };\n  },\n  methods: {\n    addType(typeName) {\n      this.$axios.post('/Type/AddType', {\n        typeName\n      }).then(response => {\n        if (response.data.flag) {\n          this.$message.success(response.data.msg);\n          this.getTypesList();\n        } else {\n          this.$message.error(response.data.msg);\n        }\n      });\n    },\n    deleteType() {},\n    modifyType() {},\n    getTypesList() {\n      this.$axios.get(`/Type/GetTypeListByUid/${this.uid}`).then(response => {\n        if (response.data.flag) {\n          this.types = response.data.data;\n        } else {\n          this.$message.error(response.data.msg);\n        }\n        console.log(response.data);\n      });\n    },\n    handleAdd() {\n      this.$prompt('请输入类型的名字', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消'\n      }).then(({\n        value\n      }) => {\n        this.addType(value);\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '取消输入'\n        });\n      });\n    },\n    handleEdit() {\n      this.$prompt('请输入新的类型名字', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消'\n      }).then(({\n        value\n      }) => {\n        this.$message({\n          type: 'success',\n          message: '你的邮箱是: ' + value\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '取消输入'\n        });\n      });\n    },\n    handleDelete() {\n      this.$confirm('此操作将永久删除此条记录, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$message({\n          type: 'success',\n          message: '删除成功!'\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    }\n  },\n  computed: {\n    uid() {\n      return this.$store.getters['getUserId'];\n    }\n  },\n  created() {\n    this.getTypesList();\n  }\n};","map":{"version":3,"mappings":"AA6BA;EACAA;EACAC;IACA;MACAC,QACA;QACAF;MACA;IAEA;EACA;EACAG;IACAC;MACA;QAAAC;MAAA;QACA;UACA;UACA;QACA;UACA;QACA;MACA;IACA;IACAC,cAEA;IACAC,cAEA;IACAC;MACA;QACA;UACA;QACA;UACA;QACA;QACAC;MACA;IACA;IACAC;MACA;QACAC;QACAC;MACA;QAAAC;MAAA;QAEA;MAEA;QACA;UACAC;UACAC;QACA;MACA;IACA;IACAC;MACA;QACAL;QACAC;MACA;QAAAC;MAAA;QACA;UACAC;UACAC;QACA;MACA;QACA;UACAD;UACAC;QACA;MACA;IACA;IACAE;MACA;QACAN;QACAC;QACAE;MACA;QACA;UACAA;UACAC;QACA;MACA;QACA;UACAD;UACAC;QACA;MACA;IACA;EACA;EACAG;IACAC;MACA;IACA;EACA;EACAC;IACA;EACA;AACA","names":["name","data","types","methods","addType","typeName","deleteType","modifyType","getTypesList","console","handleAdd","confirmButtonText","cancelButtonText","value","type","message","handleEdit","handleDelete","computed","uid","created"],"sourceRoot":"src/pages","sources":["NoteTypes.vue"],"sourcesContent":["<template>\n  <div class=\"note-type\">\n    <div class=\"title\">你好, sllowcat</div>\n    <div class=\"content\">\n      <div class=\"opts\">\n        <button class=\"add btn\" @click=\"handleAdd\">添加</button>\n        <button class=\"all-delete btn\">批量删除</button>\n      </div>\n      <el-table height=\"500\"\n      :data=\"types\">\n        <el-table-column type=\"selection\" width=\"55\"> </el-table-column>\n        <el-table-column type=\"index\" label=\"编号\" width=\"100\"> </el-table-column>\n        <el-table-column label=\"名称\" prop=\"name\"> </el-table-column>\n        <el-table-column label=\"操作\" width=\"200\">\n          <template>\n            <el-button type=\"primary\" class=\"el-icon-edit\" size=\"small\" @click=\"handleEdit\"></el-button>\n            <el-button type=\"danger\" class=\"el-icon-delete\" size=\"small\" @click=\"handleDelete\"></el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <div class=\"pigination\">\n        <el-pagination background layout=\"prev, pager, next\" :total=\"1000\">\n        </el-pagination>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"NoteTypes\",\n  data() {\n    return {\n        types: [\n            {\n                name: '123',\n            }\n        ]\n    }\n  },\n  methods: {\n    addType(typeName) {\n      this.$axios.post('/Type/AddType', {typeName}).then(response => {\n        if (response.data.flag) {\n          this.$message.success(response.data.msg)\n          this.getTypesList()\n        } else {\n          this.$message.error(response.data.msg)\n        }\n      })\n    },\n    deleteType() {\n\n    },\n    modifyType() {\n\n    },\n    getTypesList() {\n      this.$axios.get(`/Type/GetTypeListByUid/${this.uid}`).then(response => {\n        if (response.data.flag) {\n          this.types = response.data.data\n        } else {\n          this.$message.error(response.data.msg)\n        }\n        console.log(response.data);\n      })\n    },\n    handleAdd() {\n        this.$prompt('请输入类型的名字', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n        }).then(({ value }) => {\n          \n          this.addType(value)\n     \n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: '取消输入'\n          });       \n        });\n    },\n    handleEdit() {\n        this.$prompt('请输入新的类型名字', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n        }).then(({ value }) => {\n          this.$message({\n            type: 'success',\n            message: '你的邮箱是: ' + value\n          });\n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: '取消输入'\n          });       \n        });\n    },\n    handleDelete() {\n        this.$confirm('此操作将永久删除此条记录, 是否继续?', '提示', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n            }).then(() => {\n            this.$message({\n                type: 'success',\n                message: '删除成功!'\n            });\n            }).catch(() => {\n            this.$message({\n                type: 'info',\n                message: '已取消删除'\n            });          \n            });\n        }\n    },\n    computed: {\n      uid() {\n        return this.$store.getters['getUserId']\n      }\n    },\n    created() {\n      this.getTypesList()\n    }\n}\n</script>\n\n<style scoped>\n.title {\n  font-size: 24px;\n  margin-bottom: 20px;\n}\n\n.content {\n  padding: 12px;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n}\n\n.opts {\n  margin-bottom: 20px;\n}\n\n.add {\n  margin-right: 10px;\n}\n\n.pigination {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}