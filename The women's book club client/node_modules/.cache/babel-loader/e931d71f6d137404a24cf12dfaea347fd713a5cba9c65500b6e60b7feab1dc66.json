{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\n// 引入学习进度管理组件\nimport StudyProgress from './StudyProgress.vue';\nexport default {\n  components: {\n    StudyProgress\n  },\n  data() {\n    return {\n      // 评论数据\n      comments: [{\n        id: 1,\n        content: '很有帮助！',\n        author: '用户A',\n        date: '2023-11-25'\n      }, {\n        id: 2,\n        content: '加油！',\n        author: '用户B',\n        date: '2023-11-26'\n      }\n      // 其他评论数据...\n      ],\n\n      newComment: '',\n      // 用于存储新的评论\n      editingIndex: null // 用于标记当前正在编辑的评论的索引\n    };\n  },\n\n  methods: {\n    submitComment() {\n      if (this.newComment.trim() === '') {\n        // 确保评论内容不为空\n        return;\n      }\n      if (this.editingIndex === null) {\n        // 添加新评论\n        this.comments.unshift({\n          id: Date.now(),\n          // 使用时间戳作为唯一标识符\n          content: this.newComment,\n          author: '当前用户',\n          // 在实际应用中，你可能需要获取用户的真实信息\n          date: new Date().toLocaleDateString()\n        });\n      } else {\n        // 保存编辑\n        this.$set(this.comments, this.editingIndex, {\n          ...this.comments[this.editingIndex],\n          content: this.newComment\n        });\n\n        // 取消编辑状态\n        this.editingIndex = null;\n      }\n\n      // 清空新评论输入框\n      this.newComment = '';\n    },\n    editComment(index) {\n      // 进入编辑状态\n      this.editingIndex = index;\n      // 设置编辑表单内容为当前评论内容\n      this.newComment = this.comments[index].content;\n    },\n    deleteComment(index) {\n      // 删除评论\n      this.comments.splice(index, 1);\n\n      // 如果删除的是正在编辑的评论，取消编辑状态\n      if (this.editingIndex === index) {\n        this.editingIndex = null;\n        this.newComment = '';\n      }\n    },\n    cancelEdit() {\n      // 取消编辑状态\n      this.editingIndex = null;\n      // 清空编辑表单内容\n      this.newComment = '';\n    }\n  }\n};","map":{"version":3,"mappings":";AA4BA;AACA;AAEA;EACAA;IACAC;EACA;EACAC;IACA;MACA;MACAC,WACA;QAAAC;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAC;QAAAC;MAAA;MACA;MAAA,CACA;;MACAC;MAAA;MACAC;IACA;EACA;;EACAC;IACAC;MACA;QACA;QACA;MACA;MAEA;QACA;QACA;UACAP;UAAA;UACAC;UACAC;UAAA;UACAC;QACA;MACA;QACA;QACA;UACA;UACAF;QACA;;QAEA;QACA;MACA;;MAEA;MACA;IACA;IACAO;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;;MAEA;MACA;QACA;QACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACA;IACA;EACA;AACA","names":["components","StudyProgress","data","comments","id","content","author","date","newComment","editingIndex","methods","submitComment","editComment","deleteComment","cancelEdit"],"sourceRoot":"src/pages","sources":["StudyProgress.vue"],"sourcesContent":["<template>\n    <div>\n      <!-- 学习进度管理组件 -->\n      <StudyProgress />\n  \n      <!-- 评论部分 -->\n      <div class=\"comments\">\n        <h2>评论区</h2>\n        <div v-for=\"(comment, index) in comments\" :key=\"index\" class=\"comment\">\n          <div class=\"comment-content\">{{ comment.content }}</div>\n          <div class=\"comment-info\">{{ comment.author }} • {{ comment.date }}</div>\n          <div class=\"comment-actions\">\n            <button @click=\"editComment(index)\">edit</button>\n            <button @click=\"deleteComment(index)\">Delete</button>\n          </div>\n        </div>\n  \n        <!-- 添加/编辑评论表单 -->\n        <form @submit.prevent=\"submitComment\">\n          <textarea v-model=\"newComment\" placeholder=\"Add comments here\"></textarea>\n          <button type=\"submit\">{{ editingIndex === null ? '提交评论' : '保存编辑' }}</button>\n          <button type=\"button\" @click=\"cancelEdit\" v-if=\"editingIndex !== null\">取消编辑</button>\n        </form>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  // 引入学习进度管理组件\n  import StudyProgress from './StudyProgress.vue';\n  \n  export default {\n    components: {\n      StudyProgress,\n    },\n    data() {\n      return {\n        // 评论数据\n        comments: [\n          { id: 1, content: '很有帮助！', author: '用户A', date: '2023-11-25' },\n          { id: 2, content: '加油！', author: '用户B', date: '2023-11-26' },\n          // 其他评论数据...\n        ],\n        newComment: '', // 用于存储新的评论\n        editingIndex: null, // 用于标记当前正在编辑的评论的索引\n      };\n    },\n    methods: {\n      submitComment() {\n        if (this.newComment.trim() === '') {\n          // 确保评论内容不为空\n          return;\n        }\n  \n        if (this.editingIndex === null) {\n          // 添加新评论\n          this.comments.unshift({\n            id: Date.now(), // 使用时间戳作为唯一标识符\n            content: this.newComment,\n            author: '当前用户', // 在实际应用中，你可能需要获取用户的真实信息\n            date: new Date().toLocaleDateString(),\n          });\n        } else {\n          // 保存编辑\n          this.$set(this.comments, this.editingIndex, {\n            ...this.comments[this.editingIndex],\n            content: this.newComment,\n          });\n  \n          // 取消编辑状态\n          this.editingIndex = null;\n        }\n  \n        // 清空新评论输入框\n        this.newComment = '';\n      },\n      editComment(index) {\n        // 进入编辑状态\n        this.editingIndex = index;\n        // 设置编辑表单内容为当前评论内容\n        this.newComment = this.comments[index].content;\n      },\n      deleteComment(index) {\n        // 删除评论\n        this.comments.splice(index, 1);\n  \n        // 如果删除的是正在编辑的评论，取消编辑状态\n        if (this.editingIndex === index) {\n          this.editingIndex = null;\n          this.newComment = '';\n        }\n      },\n      cancelEdit() {\n        // 取消编辑状态\n        this.editingIndex = null;\n        // 清空编辑表单内容\n        this.newComment = '';\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  /* 样式可以根据需要进行调整 */\n  \n  .comments {\n    margin-top: 40px;\n  }\n  \n  .comment {\n    border: 1px solid #ccc;\n    border-radius: 8px;\n    margin-bottom: 10px;\n    padding: 10px;\n  }\n  \n  .comment-content {\n    font-size: 16px;\n  }\n  \n  .comment-info {\n    font-size: 12px;\n    color: #666;\n  }\n  \n  .comment-actions {\n    margin-top: 5px;\n  }\n  \n  textarea {\n    width: 100%;\n    margin-bottom: 10px;\n    padding: 5px;\n    font-size: 14px;\n  }\n  \n  button {\n    background-color: #1d67e6;\n    color: white;\n    padding: 8px 12px;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    margin-right: 5px;\n  }\n  \n  button:hover {\n    background-color: #1552c5;\n  }\n  \n  button[type=\"button\"] {\n    background-color: #ccc;\n    color: #333;\n  }\n  \n  button[type=\"button\"]:hover {\n    background-color: #bbb;\n  }\n  </style>\n  \n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}