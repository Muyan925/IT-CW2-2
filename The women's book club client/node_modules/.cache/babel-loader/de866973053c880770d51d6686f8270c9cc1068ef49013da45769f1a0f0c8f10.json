{"ast":null,"code":"import MarkdownIt from 'markdown-it';\nimport hljs from 'highlight.js';\nimport 'highlight.js/styles/default.css';\nexport default {\n  name: 'MarkdownView',\n  data() {\n    return {\n      text: ''\n    };\n  },\n  computed: {\n    textToHtml() {\n      const md = new MarkdownIt({\n        highlight: function (str, lang) {\n          if (lang && hljs.getLanguage(lang)) {\n            try {\n              return '<pre class=\"hljs\"><code>' + hljs.highlight(lang, str, true).value + '</code></pre>';\n            } catch (__) {}\n          }\n          return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n        }\n      });\n      return md.render(this.text);\n    }\n  },\n  methods: {\n    goBack() {\n      this.$router.go(-1);\n    },\n    getNoteInfo() {\n      this.$axios.get('/Note/GetNoteInfo?fileLocation=' + this.$route.query.location).then(response => {\n        console.log(response.data);\n        if (response.data.flag) {\n          this.text = response.data.data;\n        } else {\n          this.$message.error(response.data.msg);\n        }\n      });\n    }\n  },\n  mounted() {\n    this.getNoteInfo();\n  }\n};","map":{"version":3,"mappings":"AAWA;AACA;AACA;AACA;EACAA;EACAC;IACA;MACAC;IACA;EACA;EACAC;IACAC;MACA;QACAC;UACA,oCACA;YACA,IACA;cACA,oCACAC,wCACA;YACA;UACA;UACA;QACA;MACA;MACA;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;QACAC;QACA;UACA;QACA;UACA;QACA;MACA;IACA;EACA;EACAC;IACA;EACA;AACA","names":["name","data","text","computed","textToHtml","highlight","hljs","methods","goBack","getNoteInfo","console","mounted"],"sourceRoot":"src/pages","sources":["MarkdownView.vue"],"sourcesContent":["<template>\n  <div class=\"view\">\n    <div class=\"title\">\n        笔记管理-笔记编辑\n    </div>\n    <!-- <div class=\"content\" v-html=\"textToHtml\"></div> -->\n    <v-md-editor v-model=\"text\" height=\"cacl(100% - 34px)\"></v-md-editor>\n  </div>\n</template>\n\n<script>\nimport MarkdownIt from 'markdown-it'\nimport hljs from 'highlight.js';\nimport 'highlight.js/styles/default.css';\nexport default {\n    name: 'MarkdownView',\n    data() {\n        return {\n            text: ''\n        }\n    },\n    computed: {\n        textToHtml() {\n            const md = new MarkdownIt({\n                highlight: function (str, lang) {\n                if (lang && hljs.getLanguage(lang))\n                {\n                    try\n                    {\n                    return '<pre class=\"hljs\"><code>' +\n                        hljs.highlight(lang, str, true).value +\n                        '</code></pre>';\n                    } catch (__) { }\n                }\n                return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n                }\n            });\n            return md.render(this.text)\n        }\n    },\n    methods: {\n        goBack() {\n            this.$router.go(-1)\n        },\n        getNoteInfo() {\n            this.$axios.get('/Note/GetNoteInfo?fileLocation=' + this.$route.query.location).then(response => {\n                console.log(response.data);\n                if (response.data.flag) {\n                    this.text = response.data.data\n                } else {\n                    this.$message.error(response.data.msg)\n                }\n            })\n        }\n    },\n    mounted() {\n        this.getNoteInfo()\n    },\n}\n</script>\n\n<style scoped>\n.title {\n    font-size: 24px;\n    margin-bottom: 20px;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}