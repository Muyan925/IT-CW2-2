{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"NoteManage\",\n  data() {\n    return {\n      keywords: '',\n      file: {},\n      filterNote: {},\n      addDialogFormVisible: false,\n      addNote: true,\n      dialogTitle: \"添加笔记\",\n      notes: [],\n      types: [],\n      multipleSelection: [],\n      note: {\n        noteName: '',\n        typeName: '',\n        notePress: '',\n        noteStatus: 0,\n        tId: ''\n      },\n      pagination: {\n        //分页相关模型数据\n        currentPage: 1,\n        //当前页码\n        pageSize: 7,\n        //每页显示的记录数\n        total: 0 //总记录数\n      }\n    };\n  },\n\n  computed: {\n    uid() {\n      return this.$store.getters[\"getUserId\"];\n    }\n  },\n  methods: {\n    search() {\n      this.$axios.get(`/Note/SelectNotesByKeyword/${this.uid}/${this.pagination.currentPage}/${this.pagination.pageSize}?keyword=${this.keywords}`).then(response => {\n        if (response.data.flag) {\n          this.notes = response.data.data.records;\n          this.pagination.total = response.data.data.total;\n          // this.keywords = ''\n        } else {\n          this.$message.error(response.data.msg);\n        }\n      });\n    },\n    handleFilterNote() {\n      this.filterNote.uId = this.uid;\n      this.$axios.post(`/Note/FilterNotes/${this.pagination.currentPage}/${this.pagination.pageSize}`, this.filterNote).then(response => {\n        console.log(response.data);\n        if (response.data.flag) {\n          this.notes = response.data.data.records;\n          this.pagination.total = response.data.data.total;\n        } else {\n          this.$message.error(response.data.msg);\n        }\n      });\n    },\n    showNoteInfo(location, name) {\n      // console.log(location);\n      this.$router.push({\n        name: 'View',\n        query: {\n          location,\n          name\n        }\n      });\n    },\n    handleChange(e) {\n      if (e.currentTarget.files.length === 0) {\n        return;\n      }\n      this.file = e.currentTarget.files[0];\n    },\n    showAddDialog() {\n      this.note = {};\n      this.dialogTitle = '添加笔记';\n      this.addDialogFormVisible = true;\n      this.addNote = true;\n    },\n    showModifyDialog(nid) {\n      // console.log(nid);\n      this.dialogTitle = '更新信息';\n      this.addDialogFormVisible = true;\n      this.addNote = false;\n      this.$axios.get(`/Note/ShowNoteInfoByNid/${nid}`).then(response => {\n        if (response.data.flag) {\n          this.note = response.data.data;\n        } else {\n          this.$message.error(response.data.msg);\n        }\n      });\n    },\n    handleDelete(nid) {\n      this.$confirm(\"此操作将永久删除此条记录, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(() => {\n        this.$axios.post(`/Note/DeleteSingleNoteByNid/${nid}`).then(response => {\n          if (response.data.flag) {\n            this.$message.success(response.data.msg);\n            this.getNotesList();\n          } else {\n            this.$message.error(response.data.msg);\n          }\n        });\n      }).catch(() => {\n        this.$message({\n          type: \"info\",\n          message: \"已取消删除\"\n        });\n      });\n    },\n    handleMultipleDelete() {\n      if (this.multipleSelection.length === 0) {\n        this.$message.info(\"请先选中数据\");\n        return;\n      }\n      this.$confirm(\"此操作将永久删除所有选中的记录, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(() => {\n        let nids = [];\n        this.multipleSelection.forEach(item => {\n          nids.push(item.nId);\n        });\n        const formData = new FormData();\n        formData.append(\"nIds\", nids);\n        this.$axios.post(`/Note/DeleteNotesByNids`, formData).then(response => {\n          if (response.data.flag) {\n            this.$message.success(response.data.msg);\n            this.getNotesList();\n          } else {\n            this.$message.error(response.data.msg);\n          }\n        });\n      }).catch(() => {\n        this.$message({\n          type: \"info\",\n          message: \"已取消删除\"\n        });\n      });\n    },\n    handleModify() {\n      this.$axios.post(\"/Note/UpdateNoteInfoByNid\", this.note).then(response => {\n        if (response.data.flag) {\n          this.$message.success(response.data.msg);\n          this.addDialogFormVisible = false;\n          this.getNotesList();\n        } else {\n          this.$message.error(response.data.msg);\n        }\n      });\n    },\n    handleAddNote() {\n      if (!this.addNote) {\n        this.handleModify();\n        return;\n      }\n      if (!(this.file instanceof File)) {\n        this.$message.info('请选择笔记文件');\n        return;\n      }\n      const formData = new FormData();\n      formData.append('note', JSON.stringify({\n        ...this.note,\n        uId: this.uid\n      }));\n      formData.append('noteFile', this.file);\n      this.$axios.post(`/Note/AddNotes`, formData).then(response => {\n        if (response.data.flag) {\n          this.$message.success(response.data.msg);\n          this.addDialogFormVisible = false;\n          this.getNotesList();\n        } else {\n          this.$message.error(response.data.msg);\n        }\n      });\n    },\n    handleSelectionChange(v) {\n      this.multipleSelection = v;\n    },\n    getNotesList() {\n      this.$axios.get(`/Note/GetAllNoteByUid/${this.uid}/${this.pagination.currentPage}/${this.pagination.pageSize}`).then(response => {\n        console.log(response.data);\n        if (response.data.flag) {\n          this.notes = response.data.data.records;\n          this.pagination.total = response.data.data.total;\n        } else {\n          this.$message.error(response.data.msg);\n        }\n      });\n    },\n    getTypeList() {\n      this.$axios.get(`/Type/GetTypeListByUid/${this.uid}`).then(response => {\n        if (response.data.flag) {\n          this.types = response.data.data;\n        } else {\n          this.$message.error(response.data.msg);\n        }\n      });\n    },\n    handlePagination(current) {\n      // console.log(current);\n      this.pagination.currentPage = current;\n      this.getNotesList();\n    }\n  },\n  created() {\n    this.getTypeList();\n    this.getNotesList();\n  }\n};","map":{"version":3,"mappings":";AAsHA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;QAAA;QACAC;QAAA;QACAC;QAAA;QACAC;MACA;IACA;EACA;;EACAC;IACAC;MACA;IACA;EACA;EACAC;IACAC;MACA;QACA;UACA;UACA;UACA;QACA;UACA;QACA;MACA;IACA;IACAC;MACA;MACA;QACAC;QACA;UACA;UACA;QACA;UACA;QACA;MACA;IACA;IACAC;MACA;MACA;QAAA3B;QAAA4B;UACAC;UACA7B;QACA;MAAA;IACA;IACA8B;MACA;QACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACA;MACA;QACA;UACA;QACA;UACA;QACA;MACA;IACA;IACAC;MACA;QACAC;QACAC;QACAC;MACA,GACAC;QACA,YACAC,2CACAD;UACA;YACA;YACA;UACA;YACA;UACA;QACA;MACA,GACAE;QACA;UACAH;UACAI;QACA;MACA;IACA;IACAC;MACA;QACA;QACA;MACA;MACA;QACAP;QACAC;QACAC;MACA,GACAC;QACA;QACA;UACAK;QACA;QACA;QACAC;QACA,YACAL,0CACAD;UACA;YACA;YACA;UACA;YACA;UACA;QACA;MACA,GACAE;QACA;UACAH;UACAI;QACA;MACA;IACA;IACAI;MACA;QACA;UACA;UACA;UACA;QACA;UACA;QACA;MAEA;IACA;IACAC;MACA;QACA;QACA;MACA;MACA;QACA;QACA;MACA;MACA;MACAF;QACA;QACAG;MACA;MACAH;MACA;QACA;UACA;UACA;UACA;QACA;UACA;QACA;MACA;IAEA;IACAI;MACA;IACA;IACAC;MACA;QACAtB;QACA;UACA;UACA;QACA;UACA;QACA;MACA;IACA;IACAuB;MACA;QACA;UACA;QACA;UACA;QACA;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;EACA;EACAC;IACA;IACA;EACA;AACA","names":["name","data","keywords","file","filterNote","addDialogFormVisible","addNote","dialogTitle","notes","types","multipleSelection","note","noteName","typeName","notePress","noteStatus","tId","pagination","currentPage","pageSize","total","computed","uid","methods","search","handleFilterNote","console","showNoteInfo","query","location","handleChange","showAddDialog","showModifyDialog","handleDelete","confirmButtonText","cancelButtonText","type","then","post","catch","message","handleMultipleDelete","nids","formData","handleModify","handleAddNote","uId","handleSelectionChange","getNotesList","getTypeList","handlePagination","created"],"sourceRoot":"src/pages","sources":["NoteManage.vue"],"sourcesContent":["<template>\n    <div class=\"plan-manage\">\n        <div class=\"title\">\n            <span class=\"name\">笔记管理</span>\n        </div>\n        <div class=\"content\">\n            <div class=\"opts\">\n                <div class=\"filter-content\">\n                    <el-select @change=\"handleFilterNote\" clearable v-model=\"filterNote.typeName\" placeholder=\"笔记类型\" size=\"small\" style=\"width: 100px\">\n                        <el-option v-for=\"(item, index) in types\" :key=\"index\" :value=\"item.typeName\"></el-option>\n                    </el-select>\n                    <el-select @change=\"handleFilterNote\" clearable v-model=\"filterNote.noteStatus\" placeholder=\"完成情况\" size=\"small\" style=\"width: 100px\">\n                        <el-option label=\"未完成\" :value=\"0\"></el-option>\n                        <el-option label=\"已完成\" :value=\"1\"></el-option>\n                    </el-select>\n                    <el-select @change=\"handleFilterNote\" clearable v-model=\"filterNote.notePress\" placeholder=\"重要性\" size=\"small\" style=\"width: 100px\">\n                        <el-option value=\"P1\"></el-option>\n                        <el-option value=\"P2\"></el-option>\n                        <el-option value=\"P3\"></el-option>\n                    </el-select>\n                    <!-- <button class=\"filter btn\">筛选</button> -->\n                </div>\n                <div class=\"search-content\">\n                    <input type=\"text\" v-model=\"keywords\" />\n                    <i class=\"el-icon-circle-close\"></i>\n                    <button class=\"search btn\" @click=\"search\">搜索</button>\n                </div>\n                <div>\n                    <button class=\"add-plan btn\" @click=\"showAddDialog\">新增笔记</button>\n                    <button class=\"all-delete btn\" @click=\"handleMultipleDelete\">\n                        批量删除\n                    </button>\n                    <!-- <button class=\"add-to-plan btn\" @click=\"handleMultipleDelete\">\n                        加入计划\n                    </button> -->\n                </div>\n            </div>\n            <el-table height=\"500\" ref=\"multipleTable\" :data=\"notes\" tooltip-effect=\"dark\"\n                style=\"width: 100%; border: 1px solid #ccc; margin-top: 20px\" @selection-change=\"handleSelectionChange\">\n                <el-table-column type=\"selection\" width=\"55\"> </el-table-column>\n                <el-table-column label=\"笔记名称\">\n                    <template slot-scope=\"scope\">\n                        <span class=\"note-name\" @click=\"showNoteInfo(scope.row.fileLocation, scope.row.noteName)\">\n                            {{ scope.row.noteName }}\n                        </span>\n                    </template>\n                </el-table-column>\n                <el-table-column prop=\"typeName\" label=\"笔记类型\" width=\"100\">\n                </el-table-column>\n                <el-table-column prop=\"notePress\" label=\"重要性\" width=\"100\" show-overflow-tooltip>\n                </el-table-column>\n                <el-table-column label=\"状态\" width=\"100\" show-overflow-tooltip>\n                    <template slot-scope=\"scope\">\n                        {{ scope.row.noteStatus === 0 ? '未复习' : '已复习' }}\n                    </template>\n                </el-table-column>\n                <el-table-column label=\"操作\" width=\"160\">\n                    <template slot-scope=\"scope\">\n                        <!-- <span class=\"delete\" @click=\"handleDelete(scope.row.pId)\">删除</span>\n                        <span class=\"modify\" @click=\"showModifyDialog(scope.row.pId)\">编辑</span> -->\n                        <el-button type=\"primary\" class=\"el-icon-edit\" size=\"small\" @click=\"showModifyDialog(scope.row.nId)\"></el-button>\n                        <el-button type=\"danger\" class=\"el-icon-delete\" size=\"small\" @click=\"handleDelete(scope.row.nId)\"></el-button>\n                    </template>\n                </el-table-column>\n            </el-table>\n            <div class=\"pagination\">\n                <el-pagination @prev-click=\"handlePagination\" @next-click=\"handlePagination\" @current-change=\"handlePagination\" background layout=\"prev, pager, next\" :current-page=\"pagination.currentPage\" :page-size=\"pagination.pageSize\" :total=\"pagination.total\">\n                </el-pagination>\n            </div>\n        </div>\n\n        <el-dialog :title=\"dialogTitle\" :visible.sync=\"addDialogFormVisible\">\n            <el-form ref=\"form\" :model=\"note\" label-width=\"80px\">\n                <el-form-item label=\"笔记名称\">\n                    <el-input v-model=\"note.noteName\" style=\"max-width: 400px\"></el-input>\n                </el-form-item>\n                <!-- <el-form-item label=\"笔记描述\">\n                    <el-input v-model=\"plan.planInfo\" type=\"textarea\" rows=\"5\" show-word-limit maxlength=\"100\"\n                        style=\"width: 400px\"></el-input>\n                </el-form-item> -->\n                <el-form-item label=\"笔记类型\">\n                    <el-select v-model=\"note.tId\" style=\"max-width: 200px\" placeholder=\"请选择笔记类型\">\n                        <el-option v-for=\"(item, index) in types\" :key=\"index\" :label=\"item.typeName\" :value=\"item.tId\"></el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item label=\"重要性\">\n                    <el-select v-model=\"note.notePress\" style=\"max-width: 200px\" placeholder=\"请选择笔记重要性\">\n                        <el-option label=\"P1\" value=\"P1\"></el-option>\n                        <el-option label=\"P2\" value=\"P2\"></el-option>\n                        <el-option label=\"P3\" value=\"P3\"></el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item label=\"状态\" v-show=\"!addNote\">\n                    <el-select v-model=\"note.noteStatus\" style=\"max-width: 200px\" placeholder=\"请选择笔记状态\">\n                        <el-option label=\"未复习\" :value=\"0\"></el-option>\n                        <el-option label=\"已复习\" :value=\"1\"></el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item label=\"上传笔记\" v-show=\"addNote\">\n                    <label>\n                        <input type=\"file\" v-show=\"false\" accept=\".md\" @change=\"handleChange\">\n                        <div class=\"upload\">\n                            <span class=\"el-icon-plus\"></span>\n                            <span>点击上传文件</span>\n                        </div>\n                        <div class=\"file-name\">{{ file.name }}</div>\n                    </label>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"addDialogFormVisible = false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"handleAddNote\">确 定</el-button>\n            </div>\n        </el-dialog>\n    </div>\n</template>\n  \n<script>\nexport default {\n    name: \"NoteManage\",\n    data() {\n        return {\n            keywords: '',\n            file: {},\n            filterNote: {},\n            addDialogFormVisible: false,\n            addNote: true,\n            dialogTitle: \"添加笔记\",\n            notes: [],\n            types: [],\n            multipleSelection: [],\n            note: {\n                noteName: '',\n                typeName: '',\n                notePress: '',\n                noteStatus: 0,\n                tId: '',\n            },\n            pagination: {//分页相关模型数据\n                currentPage: 1,//当前页码\n                pageSize:7,//每页显示的记录数\n                total:0//总记录数\n            },\n        };\n    },\n    computed: {\n        uid() {\n            return this.$store.getters[\"getUserId\"];\n        },\n    },\n    methods: {\n        search() {\n            this.$axios.get(`/Note/SelectNotesByKeyword/${this.uid}/${this.pagination.currentPage}/${this.pagination.pageSize}?keyword=${this.keywords}`).then(response => {\n                if (response.data.flag) {\n                    this.notes = response.data.data.records\n                    this.pagination.total = response.data.data.total\n                    // this.keywords = ''\n                } else {\n                    this.$message.error(response.data.msg)\n                }\n            })\n        },\n        handleFilterNote() {\n            this.filterNote.uId = this.uid\n            this.$axios.post(`/Note/FilterNotes/${this.pagination.currentPage}/${this.pagination.pageSize}`, this.filterNote).then(response => {\n                console.log(response.data);\n                if (response.data.flag) {\n                    this.notes = response.data.data.records\n                    this.pagination.total = response.data.data.total\n                } else {\n                    this.$message.error(response.data.msg)\n                }\n            })\n        },\n        showNoteInfo(location, name) {\n            // console.log(location);\n            this.$router.push({name: 'View', query: {\n                location,\n                name\n            }})\n        },\n        handleChange(e) {\n            if (e.currentTarget.files.length === 0) {\n                return\n            }\n            this.file = e.currentTarget.files[0]\n        },\n        showAddDialog() {\n            this.note = {}\n            this.dialogTitle = '添加笔记'\n            this.addDialogFormVisible = true\n            this.addNote = true\n        },\n        showModifyDialog(nid) {\n            // console.log(nid);\n            this.dialogTitle = '更新信息'\n            this.addDialogFormVisible = true\n            this.addNote = false\n            this.$axios.get(`/Note/ShowNoteInfoByNid/${nid}`).then(response => {\n                if (response.data.flag) {\n                    this.note = response.data.data\n                } else {\n                    this.$message.error(response.data.msg)\n                }\n            })\n        },\n        handleDelete(nid) {\n            this.$confirm(\"此操作将永久删除此条记录, 是否继续?\", \"提示\", {\n                confirmButtonText: \"确定\",\n                cancelButtonText: \"取消\",\n                type: \"warning\",\n            })\n                .then(() => {\n                    this.$axios\n                        .post(`/Note/DeleteSingleNoteByNid/${nid}`)\n                        .then((response) => {\n                            if (response.data.flag) {\n                                this.$message.success(response.data.msg);\n                                this.getNotesList()\n                            } else {\n                                this.$message.error(response.data.msg);\n                            }\n                        });\n                })\n                .catch(() => {\n                    this.$message({\n                        type: \"info\",\n                        message: \"已取消删除\",\n                    });\n                });\n        },\n        handleMultipleDelete() {\n            if (this.multipleSelection.length === 0) {\n                this.$message.info(\"请先选中数据\");\n                return;\n            }\n            this.$confirm(\"此操作将永久删除所有选中的记录, 是否继续?\", \"提示\", {\n                confirmButtonText: \"确定\",\n                cancelButtonText: \"取消\",\n                type: \"warning\",\n            })\n                .then(() => {\n                    let nids = [];\n                    this.multipleSelection.forEach((item) => {\n                        nids.push(item.nId);\n                    });\n                    const formData = new FormData();\n                    formData.append(\"nIds\", nids);\n                    this.$axios\n                        .post(`/Note/DeleteNotesByNids`, formData)\n                        .then((response) => {\n                            if (response.data.flag) {\n                                this.$message.success(response.data.msg);\n                                this.getNotesList();\n                            } else {\n                                this.$message.error(response.data.msg);\n                            }\n                        });\n                })\n                .catch(() => {\n                    this.$message({\n                        type: \"info\",\n                        message: \"已取消删除\",\n                    });\n                });\n        },\n        handleModify() {\n            this.$axios.post(\"/Note/UpdateNoteInfoByNid\", this.note).then((response) => {\n                    if (response.data.flag) {\n                        this.$message.success(response.data.msg);\n                        this.addDialogFormVisible = false\n                        this.getNotesList()\n                    } else {\n                        this.$message.error(response.data.msg);\n                    }\n                    \n                });\n        },\n        handleAddNote() {\n            if (!this.addNote) {\n                this.handleModify()\n                return\n            }\n            if (!(this.file instanceof File)) {\n                this.$message.info('请选择笔记文件')\n                return\n            }\n            const formData = new FormData()\n            formData.append('note', JSON.stringify({\n                ...this.note,\n                uId: this.uid,\n            }))\n            formData.append('noteFile', this.file)\n            this.$axios.post(`/Note/AddNotes`, formData).then(response => {\n                if (response.data.flag) {\n                    this.$message.success(response.data.msg)\n                    this.addDialogFormVisible = false\n                    this.getNotesList()\n                } else {\n                    this.$message.error(response.data.msg)\n                }\n            })\n            \n        },\n        handleSelectionChange(v) {\n            this.multipleSelection = v;\n        },\n        getNotesList() {\n            this.$axios.get(`/Note/GetAllNoteByUid/${this.uid}/${this.pagination.currentPage}/${this.pagination.pageSize}`).then((response) => {\n                console.log(response.data);\n                if (response.data.flag) {\n                    this.notes = response.data.data.records;\n                    this.pagination.total = response.data.data.total\n                } else {\n                    this.$message.error(response.data.msg);\n                }\n            });\n        },\n        getTypeList() {\n            this.$axios.get(`/Type/GetTypeListByUid/${this.uid}`).then(response => {\n                if (response.data.flag) {\n                this.types = response.data.data\n                } else {\n                this.$message.error(response.data.msg)\n                }\n            })\n        },\n        handlePagination(current) {\n            // console.log(current);\n            this.pagination.currentPage = current\n            this.getNotesList()\n        }\n    },\n    created() {\n        this.getTypeList()\n        this.getNotesList();\n    },\n};\n</script>\n  \n<style scoped>\n.title {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 20px;\n}\n\n.title .name {\n    font-size: 24px;\n}\n\n.search-content {\n    position: relative;\n}\n\n.search-content i {\n    position: absolute;\n    right: 76px;\n    top: 50%;\n    transform: translateY(-55%);\n    color: #ddd;\n    transition: all .3s;\n    cursor: default;\n}\n\n.search-content i:hover {\n    color: #ccc;\n}\n\n.search-content input {\n    width: 400px;\n    height: 30px;\n    margin-right: 20px;\n    border-radius: 15px;\n    border: 1px solid #ddd;\n    outline: none;\n    text-indent: 15px;\n    font-size: 16px;\n    transition: all .3s;\n}\n\n.search-content input:hover {\n    border-color: #ccc;\n}\n\n.search-content input:focus {\n    border-color: #5a9cf8;\n}\n\n.content {\n    position: relative;\n    padding: 12px;\n    border: 1px solid #ccc;\n    border-radius: 10px;\n}\n\n.opts {\n    display: flex;\n    justify-content: space-between;\n}\n\n.filter-content * {\n    margin-right: 10px;\n}\n\n.pagination {\n    display: flex;\n    width: 100%;\n    margin-top: 20px;\n    justify-content: center;\n}\n\n.add-plan {\n    margin-right: 10px;\n}\n\n\n.upload {\n    display: flex;\n    width: 200px;\n    height: 200px;\n    /* background-color: red; */\n    border: 1px dotted gray;\n    border-radius: 10px;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n\n.upload span:first-child {\n    font-size: 40px;\n    margin-top: 30px;\n}\n\n.upload span:last-child {\n    font-size: 12px;\n}\n\n.file-name {\n    width: 200px;\n    height: 30px;\n    /* background-color: red; */\n    font-size: 14px;\n}\n\n.note-name {\n    cursor: pointer;\n}\n\n.note-name:hover {\n    color: rgb(61, 144, 233);\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}